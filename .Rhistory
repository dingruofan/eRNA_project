#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
rm(list=ls())
library(ggplot2)
library(reshape2)
library(Cairo)
setwd("/home/ding/all_cmd/script/enh_statistics/")
enh_bid_exp_TF<-read.table("./enh_bid_exp_TF_all",header = T,stringsAsFactors = F)
enh_unbid_exp_TF<-read.table("./enh_unbid_exp_TF_all",header = T,stringsAsFactors = F)
enh_no_eRNA_exp_TF<-read.table("./enh_no_eRNA_exp_TF_all",header = T,stringsAsFactors = F)
enh_random_exp_TF<-read.table("./enh_random_exp_TF_all",header = T,stringsAsFactors = F)
names(enh_bid_exp_TF)<-c("enhancer","eRNA_exp_TPM","TFBS_num","tissue")
names(enh_unbid_exp_TF)<-c("enhancer","eRNA_exp_TPM","TFBS_num","tissue")
names(enh_no_eRNA_exp_TF)<-c("enhancer","eRNA_exp_TPM","TFBS_num","tissue")
names(enh_random_exp_TF)<-c("enhancer","eRNA_exp_TPM","TFBS_num","tissue")
enh_all_exp_TF<-rbind(enh_bid_exp_TF,enh_unbid_exp_TF,enh_no_eRNA_exp_TF,enh_random_exp_TF)
enh_all_exp_TF$type<-c(rep("bid",nrow(enh_bid_exp_TF)),rep("unbid",nrow(enh_unbid_exp_TF)),rep("no_eRNA",nrow(enh_no_eRNA_exp_TF)),rep("random",nrow(enh_random_exp_TF)))
# cor.test(enh_bid_exp_TF$eRNA_exp_TPM,enh_bid_exp_TF$TFBS_num,method=c("pearson"))
# cor.test(enh_unbid_exp_TF$eRNA_exp_TPM,enh_unbid_exp_TF$TFBS_num,method=c("pearson"))
enh_all_exp_TF<-enh_all_exp_TF[!duplicated(enh_all_exp_TF[,c(1,3,4,5)]),c(1,3,4,5)]
#!!!！！!!！!注意：使用log(TFBS_num)作为转录因子富集程度:
# enh_all_exp_TF$TFBS_num<-log(enh_all_exp_TF,2)
#排序：
enh_all_exp_TF$type<-factor(enh_all_exp_TF$type,levels=c("bid","unbid","no_eRNA","random"))
#######################################
ggplot(enh_all_exp_TF,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,40)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("bid","unbid","no_eRNA","random"),
labels=c(expression(En["2D-eRNA"]),expression(En["1D-eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(axis.text=element_text(size=rel(1.1)),
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top",
legend.box.spacing = unit(0,"mm")
)
#bid/unbid/no_eRNA转录因子结合位点数目统计箱线图
# par('din')
png_path<-"/media/ding/000B49000006264C/eRNA_project/figure/enh_isbid_TF_enrich.png"
CairoPNG(png_path, width = 5.5, height =5.16 , units='in', dpi=600)
ggplot(enh_all_exp_TF,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,40)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("bid","unbid","no_eRNA","random"),
labels=c(expression(Enh["2D-eRNA"]),expression(Enh["1D-eRNA"]),expression(Enh["no-eRNA"]),"random"))+
theme_bw()+
theme(axis.text=element_text(size=rel(1.1)),
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top",
legend.box.spacing = unit(0,"mm")
)
dev.off()
#获得spe的信息，并做图:
enh_all_count_spe<-read.table("/home/ding/all_cmd/script/enh_statistics/enh_all_count_spe",header = T,stringsAsFactors = F)
enh_all_count_spe<-enh_all_count_spe[,c("enhancer","type","is_spe")]
#合并spe列
enh_all_exp_TF_spe<-merge(enh_all_exp_TF,enh_all_count_spe,by=c("enhancer","type"),all.x = T)
#将random行的is_spe改为random:
enh_all_exp_TF_spe[is.na(enh_all_exp_TF_spe$is_spe),"is_spe"]<-"random"
#排序：
enh_all_exp_TF_spe$is_spe<-factor(enh_all_exp_TF_spe$is_spe,levels=c("uni","other","spe","random"))
#######################################
ggplot(enh_all_exp_TF_spe,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=is_spe),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("spe","other","uni","random"),
labels=c(expression(En["TS"]),expression(En["Oth"]),expression(En["UE"]),"random"))+
theme_bw()+
theme(axis.text=element_text(size=rel(1.1)),
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top",
legend.box.spacing = unit(0,"mm")
)
#bid/unbid/no_eRNA转录因子结合位点数目统计箱线图
# par('din')
png_path<-"/media/ding/000B49000006264C/eRNA_project/figure/enh_isspe_TF_enrich.png"
CairoPNG(png_path, width = 5.5, height =5.16 , units='in', dpi=600)
ggplot(enh_all_exp_TF_spe,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=is_spe),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("spe","other","uni","random"),
labels=c(expression(Enh["TS"]),expression(Enh["Oth"]),expression(Enh["UE"]),"random"))+
theme_bw()+
theme(axis.text=element_text(size=rel(1.1)),
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top",
legend.box.spacing = unit(0,"mm")
)
dev.off()
#比较eRNAs-ENh和no-eRNAs Enh的TF富集程度：
enh_all_exp_TF_2<-enh_all_exp_TF
enh_all_exp_TF_2$type<-as.character(enh_all_exp_TF_2$type)
enh_all_exp_TF_2[enh_all_exp_TF_2$type=="bid"|enh_all_exp_TF_2$type=="unbid","type"]<-"eRNAs-Enh"
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(axis.text=element_text(size=rel(1.1)),
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
#比较eRNAs-ENh和no-eRNAs Enh的TF富集程度：
enh_all_exp_TF_2<-enh_all_exp_TF
enh_all_exp_TF_2$type<-as.character(enh_all_exp_TF_2$type)
enh_all_exp_TF_2[enh_all_exp_TF_2$type=="bid"|enh_all_exp_TF_2$type=="unbid","type"]<-"eRNAs-Enh"
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(axis.text=element_text(size=rel(1.1)),
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
legend.text=element_text(size=rel(1.1)),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
legend.box.spacing = margin(0.1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
legend.box.spacing = unit(0,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
png_path<-"/media/ding/000B49000006264C/eRNA_project/figure/enh_iseRNAs_TF_enrich.png"
CairoPNG(png_path, width = 5.5, height =5.16 , units='in', dpi=600)
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(En["eRNA"]),expression(En["no-eRNA"]),"random"))+
theme_bw()+
theme(
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
legend.box.spacing = unit(0.1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
png_path<-"/media/ding/000B49000006264C/eRNA_project/figure/enh_iseRNAs_TF_enrich.png"
CairoPNG(png_path, width = 5.5, height =5.16 , units='in', dpi=600)
ggplot(enh_all_exp_TF_2,aes(x=reorder(tissue,TFBS_num),y=TFBS_num))+
geom_boxplot(aes(fill=type),show.legend = T,outlier.size = 0,outlier.stroke = 0)+
ylim(0,30)+
xlab("tissue")+
ylab("TF enrichment")+
scale_fill_discrete(limits=c("eRNAs-Enh","no_eRNA","random"),labels=c(expression(Enh["eRNA"]),expression(Enh["no-eRNA"]),"random"))+
theme_bw()+
theme(
axis.text.x=element_text(angle = 30,vjust=1,hjust=1),
axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.1)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=unit(0,"mm"),
legend.box.spacing = unit(0.1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
rm(list=ls())
setwd("/home/ding/all_cmd/script/")
library(ggplot2)
library(reshape)
library(Cairo)
# setwd("/home/ding/all_cmd/script")
mean_signal_500<-as.data.frame(read.table("./enh_statistics/conservation_result.mean_signal",header=F,sep="\t",stringsAsFactors = F))
apply(mean_signal_500,2,as.numeric)
names(mean_signal_500)<-c("loc","random","2D-eRNAs Enh","1D-eRNAs Enh","gene TSS","no-eRNAs Enh")
# 平滑：
i<--2000
window_size=10
mean_signal_500_smooth<-data.frame(loc=seq(-2000,2000,1))
while(i<2000){
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"random"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"random"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"2D-eRNAs Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"2D-eRNAs Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"1D-eRNAs Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"1D-eRNAs Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"gene TSS"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"gene TSS"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"no-eRNAs Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"no-eRNAs Enh"])
i=i+window_size
}
#只能用一个
mean_signal_500_melt<-melt(mean_signal_500_smooth,id=c("loc"))
#只能用一个
# mean_signal_500_melt<-melt(mean_signal_500,id=c("loc"))
names(mean_signal_500_melt)[2]<-c("type")
#排序:
mean_signal_500_melt$type<-factor(mean_signal_500_melt$type,levels = c("2D-eRNAs Enh","1D-eRNAs Enh","no-eRNAs Enh","gene TSS","random"))
#画图:
png_path="/media/ding/000B49000006264C/eRNA_project/figure/conservation_isbid.png"
CairoPNG(png_path, width = 6.2, height = 6, units='in', dpi=600)
ggplot(data=mean_signal_500_melt,aes(x=loc,y=value,colour=type))+
# geom_smooth()+
geom_line(size=0.6)+
# geom_point()+
xlab("Distance to enhancer center/ TSS of gene (bp)")+
ylab("PhastCons Score")+
xlim(c(-1000,1000))+
scale_colour_manual(limits=c("2D-eRNAs Enh","1D-eRNAs Enh","no-eRNAs Enh","gene TSS","random"),labels=c(expression(Enh["2D-eRNA"]),expression(Enh["1D-eRNA"]),expression(Enh["no-eRNA"]),"Gene TSS","random"),values = c("red","gold","green","blue","black"))+
theme_bw()+
theme(
axis.text=element_text(size = rel(1.3)),
axis.title=element_text(size=rel(1.3)),
# axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.2)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
legend.box.spacing = unit(1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
rm(list=ls())
setwd("/home/ding/all_cmd/script/")
library(ggplot2)
library(reshape)
library(Cairo)
# setwd("/home/ding/all_cmd/script")
mean_signal_500<-as.data.frame(read.table("./enh_statistics/conservation2_result.mean_signal",header=F,sep="\t",stringsAsFactors = F))
apply(mean_signal_500,2,as.numeric)
names(mean_signal_500)<-c("loc","random","specific Enh","ubiquitously Enh","gene TSS","other Enh")
# 平滑：
i<--2000
window_size=10
mean_signal_500_smooth<-data.frame(loc=seq(-2000,2000,1))
while(i<2000){
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"random"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"random"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"specific Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"specific Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"ubiquitously Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"ubiquitously Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"gene TSS"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"gene TSS"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"other Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"other Enh"])
i=i+window_size
}
#只能用一个
mean_signal_500_melt<-melt(mean_signal_500_smooth,id=c("loc"))
#只能用一个
# mean_signal_500_melt<-melt(mean_signal_500,id=c("loc"))
names(mean_signal_500_melt)[2]<-c("type")
#排序：
mean_signal_500_melt$type<-factor(mean_signal_500_melt$type,levels=c("specific Enh","ubiquitously Enh","other Enh","gene TSS","random"))
#画图:
png_path="/media/ding/000B49000006264C/eRNA_project/figure/conservation_isspe.png"
CairoPNG(png_path, width = 6.2, height = 6, units='in', dpi=600)
ggplot(data=mean_signal_500_melt,aes(x=loc,y=value,colour=type))+
# geom_smooth()+
geom_line(size=0.6,alpha=1)+
# geom_point()+
xlab("Distance to enhancer center/ TSS of gene (bp)")+
ylab("PhastCons Score")+
xlim(c(-1000,1000))+
scale_colour_manual(limits=c("specific Enh","ubiquitously Enh","other Enh","gene TSS","random"),labels=c(expression(Enh["TS"]),expression(Enh["UE"]),expression(Enh["Oth"]),"Gene TSS","random"),values = c("red","gold","green","blue","black"))+
theme_bw()+
theme(
axis.text=element_text(size = rel(1.3)),
axis.title=element_text(size=rel(1.3)),
# axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.3)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
legend.box.spacing = unit(1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
rm(list=ls())
setwd("/home/ding/all_cmd/script")
library(ggplot2)
library(reshape)
library(Cairo)
options(bitmapType = "cairo")
mean_signal_500<-as.data.frame(read.table("./enh_statistics/GC_result.mean_signal",header=F,sep="\t",stringsAsFactors = F))
apply(mean_signal_500,2,as.numeric)
names(mean_signal_500)<-c("loc","random","2D-eRNAs Enh","1D-eRNAs Enh","Gene TSS","no-eRNAs Enh")
# 平滑：
i<--2000
window_size=10
mean_signal_500_smooth<-data.frame(loc=seq(-2000,2000,1))
while(i<2000){
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"random"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"random"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"2D-eRNAs Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"2D-eRNAs Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"1D-eRNAs Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"1D-eRNAs Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"Gene TSS"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"Gene TSS"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"no-eRNAs Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"no-eRNAs Enh"])
i=i+window_size
}
#只能用一个
mean_signal_500_melt<-melt(mean_signal_500_smooth,id=c("loc"))
#只能用一个
# mean_signal_500_melt<-melt(mean_signal_500,id=c("loc"))
names(mean_signal_500_melt)[2]<-c("type")
#排序:
mean_signal_500_melt$type<-factor(mean_signal_500_melt$type,levels=c("2D-eRNAs Enh","1D-eRNAs Enh","no-eRNAs Enh","Gene TSS","random"))
#画图
png_path="/media/ding/000B49000006264C/eRNA_project/figure/GC_isbid.png"
CairoPNG(png_path, width = 6.2, height = 5.5, units='in', dpi=600)
# png_path="/media/ding/000B49000006264C/eRNA_project/figure/GC_isbid.png"
# CairoPNG(png_path, width = 6, height = 5.5, units='in', dpi=600)
ggplot(data=mean_signal_500_melt,aes(x=loc,y=value,colour=type))+
geom_line(size=0.6)+
# geom_smooth(se=FALSE,aes(fill=type))+
# scale_color_manual(values=c("blue","green","red","black"))+
xlab("Distance to enhancer center/ TSS of gene (bp)")+
ylab("GC %")+
# geom_vline(xintercept = -100)+
scale_colour_manual(limits=c("2D-eRNAs Enh","1D-eRNAs Enh","no-eRNAs Enh","Gene TSS","random"),labels=c(expression(Enh["2D-eRNA"]),expression(Enh["1D-eRNA"]),expression(Enh["no-eRNA"]),"Gene TSS","random"),values = c("red","gold","green","blue","black"))+
scale_x_continuous(breaks=seq(-2000,2000,1000),labels=paste(seq(-2000,2000,1000),seq=""))+
theme_bw()+
theme(
axis.text=element_text(size = rel(1.3)),
axis.title=element_text(size=rel(1.3)),
# axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.2)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
legend.box.spacing = unit(1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
rm(list=ls())
setwd("/home/ding/all_cmd/script")
library(ggplot2)
library(reshape)
library(Cairo)
mean_signal_500<-as.data.frame(read.table("./enh_statistics/GC2_result.mean_signal",header=F,sep="\t",stringsAsFactors = F))
apply(mean_signal_500,2,as.numeric)
names(mean_signal_500)<-c("loc","random","specific Enh","ubiquitously Enh","gene TSS","other Enh")
# 平滑：
i<--2000
window_size=10
mean_signal_500_smooth<-data.frame(loc=seq(-2000,2000,1))
while(i<2000){
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"random"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"random"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"specific Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"specific Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"ubiquitously Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"ubiquitously Enh"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"gene TSS"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"gene TSS"])
mean_signal_500_smooth[mean_signal_500_smooth$loc %in% seq(i,i+window_size,1),"other Enh"]<-mean(mean_signal_500[mean_signal_500$loc %in% seq(i,i+window_size,1),"other Enh"])
i=i+window_size
}
#只能用一个
mean_signal_500_melt<-melt(mean_signal_500_smooth,id=c("loc"))
#只能用一个
# mean_signal_500_melt<-melt(mean_signal_500,id=c("loc"))
names(mean_signal_500_melt)[2]<-c("type")
#排序：
mean_signal_500_melt$type<-factor(mean_signal_500_melt$type,levels=c("specific Enh","ubiquitously Enh","other Enh","gene TSS","random"))
#画图:
png_path="/media/ding/000B49000006264C/eRNA_project/figure/GC_isspe.png"
CairoPNG(png_path, width = 6, height = 5.5, units='in', dpi=600)
ggplot(data=mean_signal_500_melt,aes(x=loc,y=value,colour=type))+
geom_line(size=0.6,alpha=1)+
# geom_smooth(se=FALSE,aes(fill=type))+
# scale_color_manual(values=c("blue","green","red","black"))+
# xlab("distance to enhancer center (bp)")+
ylab("GC %")+
xlab("Distance to enhancer center/ TSS of gene (bp)")+
# xlim(c(-1000,1000))+
scale_colour_manual(limits=c("specific Enh","ubiquitously Enh","other Enh","gene TSS","random"),labels=c(expression(Enh["TS"]),expression(Enh["UE"]),expression(Enh["Oth"]),"Gene TSS","random"),values = c("red","gold","green","blue","black"))+
scale_x_continuous(breaks=seq(-2000,2000,1000),labels=paste(seq(-2000,2000,1000),seq=""))+
theme_bw()+
theme(
axis.text=element_text(size = rel(1.3)),
axis.title=element_text(size=rel(1.3)),
# axis.title.x=element_blank(),
legend.text=element_text(size=rel(1.2)),
legend.title=element_blank(),
legend.background=element_blank(),
legend.key = element_blank(),
legend.margin=margin(0,0,0,0,"mm"),
legend.box.spacing = unit(1,"mm"),
#legend.position=c(1,1),legend.justification=c(1,1),
legend.position="top"
)
dev.off()
